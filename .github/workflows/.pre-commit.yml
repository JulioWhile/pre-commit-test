name: Pre-Commit Quality Gate
on:
  pull_request:
  push:
    branches: [main, develop]

jobs:
  pre-commit-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Get changed files (for PR)
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin ${{ github.base_ref }} --deepen=100
          git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
          grep -E '\.(py|yml|yaml|json|csv)$' changed_files.txt > filtered_files.txt || true

      - name: Get all files (for push to main/develop)
        if: github.event_name == 'push'
        run: |
          find . -name "*.py" -o -name "*.yml" -o -name "*.yaml" -o -name "*.json" -o -name "*.csv" | grep -v ".git" > filtered_files.txt || true

      - name: Run pre-commit checks
        run: |
          if [ -s filtered_files.txt ]; then
            echo "üîç Running pre-commit checks..."
            echo "Files to check:"
            cat filtered_files.txt
            echo ""
            
            if xargs pre-commit run --files < filtered_files.txt; then
              echo "‚úÖ All pre-commit checks passed!"
            else
              echo ""
              echo "‚ùå Pre-commit checks failed!"
              echo ""
              echo "To fix these issues locally:"
              echo "1. Install pre-commit: pip install pre-commit"
              echo "2. Install hooks: pre-commit install"
              echo "3. Run on your files: pre-commit run --files <file1> <file2> ..."
              echo "4. Or run on all files: pre-commit run --all-files"
              echo ""
              echo "Most issues can be auto-fixed. Commit the changes and push again."
              exit 1
            fi
          else
            echo "‚ÑπÔ∏è  No relevant files to check."
          fi

  # Optional: Add a job that provides helpful PR comments
  pr-comment:
    runs-on: ubuntu-latest
    needs: pre-commit-check
    if: failure() && github.event_name == 'pull_request'
    steps:
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ‚ùå Pre-commit checks failed
              
              Please fix the code quality issues by running these commands locally:
              
              \`\`\`bash
              # Install pre-commit if not already installed
              pip install pre-commit
              
              # Install the hooks
              pre-commit install
              
              # Run pre-commit on all changed files (this will auto-fix most issues)
              pre-commit run --all-files
              
              # Commit and push the fixes
              git add .
              git commit -m "fix: apply pre-commit auto-fixes"
              git push
              \`\`\`
              
              Most formatting issues will be automatically fixed. Please commit and push the changes.`
            })
